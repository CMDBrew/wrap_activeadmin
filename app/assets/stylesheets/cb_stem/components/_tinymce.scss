.text.input,
.string.input {
  textarea.tinymce { display: none; }

  .mce-tinymce {
    @include box-shadow(none);
    overflow: hidden;
    border-color: $input-border-color !important;
    border-radius: $input-border-radius;

    *:not(i) { font-family: $font-family-sans-serif; }
  }

  .mce-panel { border-color: $input-border-color; }
  .mce-top-part::before { content: none; }

  .mce-btn-group {
    padding: 0;
    margin-right: $spacer / 2;
    margin-bottom: $spacer / 2;
    margin-left: 0 !important;
    border: 0 !important;

    & > div { @extend .btn-group; }

  }

  .mce-toolbar {
    display: flex;
    align-items: center;
    padding: $spacer / 2;
    padding-bottom: 0;
    background: $gray-100;
  }

  .mce-statusbar { border-top: 0; }

  .mce-caret {
    @extend .nc-icon;
    position: static;
    width: auto;
    height: auto;
    margin: 0 !important;
    margin-left: $spacer / 2 !important;
    border: 0;

    &::before { content: $icon-select; }
  }

  .mce-text,
  .mce-btn {
    @extend .btn;
    @extend .btn-sm;
    @extend .btn-light;
    height: 32px;
    line-height: calc(32px - #{$input-btn-padding-y-sm} * 2);
    color: $body-color !important;
    text-shadow: none;
    background: $white !important;
    box-sizing: border-box;

    button {
      display: block;
      padding: 0;
      line-height: calc(32px - #{$input-btn-padding-y-sm} * 2);
    }

    * { color: inherit !important; }

    &:hover { background: $light; }

    &.mce-active {
      background: transparent;
      i { color: $primary !important; }
    }
  }
}
